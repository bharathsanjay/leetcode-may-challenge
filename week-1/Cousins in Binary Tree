/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        int dx=-1;
        int dy=-1;
        int px=0;
        int py=0;
               
        parentdepth(root, x, y,0,dx,dy,px,py);
        return ((dx==dy) && (px!=py));
        
    }
    void parentdepth(TreeNode* root, int x, int y,int d,int& dx,int& dy,int& px,int& py){
        if(!root)
            return ;
        if(root->left)
        {
            if(root->left->val==x){
              dx=d+1;
              px=root->val;
            }
        
            else if(root->left->val==y){
              dy=d+1;
              py=root->val;
            }
      }
        if(root->right){
            if(root->right->val==x){
            dx=d+1;
            px=root->val;
            }
        
            else if(root->right->val==y){
            dy=d+1;
            py=root->val;
            }
        }
        if(dx!=-1 && dy!=-1)
            return;
        parentdepth(root->left,  x,  y,d+1,dx,dy,px,py);
        parentdepth(root->right,  x,  y,d+1,dx,dy,px,py);
        
    }
};
